syntax = "proto3";

package syft_plugin;
option go_package = "github.com/deepfence/agent-plugin-grpc/proto";
import "google/protobuf/any.proto";

service SyftPlugin {
    rpc GetVulnerabilitySBOM(SBOMRequest) returns (SBOMResult);
}

message SBOMRequest {
    string source = 1;
    string scan_type = 2;
}

message Locations {
    string path = 1;
    string layerID = 2;
}

message Extrafields {
}

message Pomproperties {
    string path = 1;
    string name = 2;
    string groupId = 3;
    string artifactId = 4;
    string version = 5;
    Extrafields extraFields = 6;
}

message Parent {
    string groupId = 1;
    string artifactId = 2;
    string version = 3;
}

message Pomproject {
    string path = 1;
    Parent parent = 2;
    string groupId = 3;
    string artifactId = 4;
    string version = 5;
    string name = 6;
    string description = 7;
    string url = 8;
}

message Metadata {
    string virtualPath = 1;
    Pomproperties pomProperties = 2;
    Pomproject pomProject = 3;
}

message Artifacts {
    string id = 1;
    string name = 2;
    string version = 3;
    string type = 4;
    string foundBy = 5;
    repeated Locations locations = 6;
    repeated google.protobuf.Any licenses = 7;
    string language = 8;
    repeated string cpes = 9;
    string purl = 10;
    string metadataType = 11;
    Metadata metadata = 12;
}

message Artifactrelationships {
    string parent = 1;
    string child = 2;
    string type = 3;
}

message Location {
    string path = 1;
    string layerID = 2;
}

message Files {
    string id = 1;
    Location location = 2;
}

message Layers {
    string mediaType = 1;
    string digest = 2;
    uint32 size = 3;
}

message Target {
    string userInput = 1;
    string imageID = 2;
    string manifestDigest = 3;
    string mediaType = 4;
    repeated string tags = 5;
    uint32 imageSize = 6;
    repeated Layers layers = 7;
    string manifest = 8;
    string config = 9;
    repeated string repoDigests = 10;
}

message Source {
    string type = 1;
    Target target = 2;
}

message Distro {
    string name = 1;
    string version = 2;
    string idLike = 3;
}

message Anchore {
    string host = 1;
    string path = 2;
    string dockerfile = 3;
    bool overwrite_existing_image = 4;
    uint32 import_timeout = 5;
}

message Dev {
    bool profile_cpu = 1;
    bool profile_mem = 2;
}

message Log {
    bool structured = 1;
    string level = 2;
    string file_location = 3;
}

message Cataloger {
    bool enabled = 1;
    string scope = 2;
}

message Package {
    Cataloger cataloger = 1;
}

message Cataloger1 {
    bool enabled = 1;
    string scope = 2;
}

message File_metadata {
    Cataloger1 cataloger = 1;
    repeated string digests = 2;
}

message Cataloger2 {
    bool enabled = 1;
    string scope = 2;
}

message File_classification {
    Cataloger2 cataloger = 1;
}

message Cataloger3 {
    bool enabled = 1;
    string scope = 2;
}

message File_contents {
    Cataloger3 cataloger = 1;
    uint32 skip_files_above_size = 2;
    repeated google.protobuf.Any globs = 3;
}

message Cataloger4 {
    bool enabled = 1;
    string scope = 2;
}

message Additional_patterns {
}

message Secrets {
    Cataloger4 cataloger = 1;
    Additional_patterns additional_patterns = 2;
    repeated google.protobuf.Any exclude_pattern_names = 3;
    bool reveal_values = 4;
    uint32 skip_files_above_size = 5;
}

message Registry {
    bool insecure_skip_tls_verify = 1;
    bool insecure_use_http = 2;
    repeated google.protobuf.Any auth = 3;
}

message Configuration {
    string configPath = 1;
    string output = 2;
    string file = 3;
    bool quiet = 4;
    bool check_for_app_update = 5;
    Anchore anchore = 6;
    Dev dev = 7;
    Log log = 8;
    Package package = 9;
    File_metadata file_metadata = 10;
    File_classification file_classification = 11;
    File_contents file_contents = 12;
    Secrets secrets = 13;
    Registry registry = 14;
}

message Descriptor {
    string name = 1;
    string version = 2;
    Configuration configuration = 3;
}

message Schema {
    string version = 1;
    string url = 2;
}

message SBOMResult {
    repeated Artifacts artifacts = 1;
    repeated Artifactrelationships artifactRelationships = 2;
    repeated Files files = 3;
    Source source = 4;
    Distro distro = 5;
    Descriptor descriptor = 6;
    Schema schema = 7;
}